# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# commands:
#   print_pipeline_id:
#     description: "Echo the pipeline id using commands"
#     parameters:
#       id:
#         type: string
#     steps:
#       - run: echo << parameters.id >>
jobs:
  # say-hello:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: cimg/base:stable
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Say hello"
  #         command: "echo Hello, World!"
  # print_hello:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: 
  #         name: "echo hello"
  #         command: "echo hello"
  # print_world:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: 
  #         name: "echo world"
  #         command: "echo world"
  # print_my_name:
  #   docker: 
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: echo $MY_NAME_VAR


  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: echo "hello world" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths: 
  #           - output.txt

  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps: 
  #     - attach_workspace:
  #         at: ~/
  #     - run: cat ~/output.txt 

  # print_pipeline:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - print_pipeline_id:
  #         id: $CIRCLE_WORKFLOW_ID

  # failover:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: cat assa.txt
  #     - run: 
  #         name: on error
  #         command: echo "FAILED TO RUN COMMAND ABOVE"
  #         when: on_fail

  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file ./template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # say-hello-workflow:
  #   jobs:
  #     - say-hello
  print-hello-world-workflow:
    jobs:
      # - print_hello
      # - print_world:
      #     requires: [print_hello]
      # - print_my_name:
      #     requires: [print_world]
      # - save_hello_world_output
      # - print_output_file:
      #     requires: [save_hello_world_output]
      # - print_pipeline
      # - failover
      - create_infrastructure
